const map = function(tfunc) {
  const dat = this;
  return Observable.from(ob => {
    dat.subscribe({
      next: x => ob.next(tfunc(x)),
      error: ob.error,
      complete: ob.complete,
    });
  });
};

const createObservable = subscribe => {
  return { subscribe, map };
};

const Observable = {
  from: subscribe => {
    return { subscribe, map };
  },
  fromArray: array => {
    return Observable.from(ob => {
      array.forEach(ob.next);
      ob.complete();
    });
  },
  fromEvent: evt => {
    return Observable.from(ob => {
      document.addEventListener(evt, ob.next);
    });
  },
};

const click2_observable = Observable.fromEvent('click');

const click_observable = Observable.from(ob => {
  document.addEventListener('click', ob.next);
});

const array2_observable = Observable.fromArray([ 12, 34, 56, 78 ]);

const array_observable = {
  subscribe: function(ob) {
    [ 1, 2, 3, 4, 5 ].forEach(ob.next);
    ob.complete();
  },
};

const observer = {
  next: function nextCallback(data) {
    console.log(data);
  },
  complete: function completeCallback(data) {
    console.warn('done');
  },
  error: function errorCallback(err) {
    console.error(err);
  },
};
// array_observable.subscribe(observer);
//
// click_observable.subscribe({
//   next: evt => console.log('click', evt.clientX, evt.clientY),
// });
//
// click2_observable
//   .map(x => x.clientX * (-1))
//   .subscribe({ next: Xpos => console.log('click2', Xpos) });
//
// array2_observable.map(x => x / 2).subscribe(observer);
