// const faker = require('faker');
// const md5 = require('md5');
// // const Rx = require('rxjs/Rx');
// const most = require('most');
// const firebase = require('../firebase/init');

import Url from 'fast-url-parser';
Url.queryString = require('querystringparser');

const tryLoginWithQueryString = uri => {
  console.log('login sequence, location', uri);
  var parsed = Url.parse(uri, true);
  if (parsed.query.actor !== undefined) {
    return xapiLogin(parsed.query);
  } else {
    return cookieLogin();
  }
};

const xapiLogin = query => {
  const actor = JSON.parse(query.actor);
  const email = actor.mbox.replace('mailto:', '');
  const name = actor.name;
  console.log('👤 xAPI login as:', email, name);
  return {name, email};
};

const cookieLogin = () => {
  console.log('🍪 cookie login');
};

/* 
==Authlogic
  1. Prefer TinCan authentication, if available
  1.a. pull query string and parse into actor, LRS creds
  1.b. use pushstate to clear the query string
  1.c. store the email address in a cookie for cookie authentication
  1.d. proceed to cookie authentication
       --> consider just using FB authentication in lieu of cookies/localStorage

  2. If no querystring actor, login with cookie/localStorage
    https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage
    https://github.com/js-cookie/js-cookie
  2.a. search for cookie (stored previously), extract email address
  2.b. use email address and activity_slug to find an enrollment in FB
  2.c. create user in FB if none currently exists
  2.d. Save Firebase Auth UUID to cookie/localstorage instead of email  
       as well as saving the pushkey of the enrollment
  2.e. create enrollment in FB if none exists for this course
  2.f. Grab Enrollment and pass to initialize screen

  3. Init screen appears showing access messages
  3.a. If progress for enrollment exists then pass progress to hucklebuck
  3.b. If no progress exists, welcome user to course and start onboarding
  3.c. Cache course offline... (can we cache later or on init?)

  4. If no cookie, replace body with error page (reached this page in error)
  4.a. clear all data from offline cache (if possible?)
  4.b. Pushstate to an error URL:
      "You are not authorized to view this page, please login to 
       xxx.scitent.com to get authorized access to this content."

  

*/
export default tryLoginWithQueryString;
