import { bus } from 'partybus';


const embed = (config) => {
  !function(){var analytics=window.analytics=window.analytics||[];if(!analytics.initialize)if(analytics.invoked)window.console&&console.error&&console.error("Segment snippet included twice.");else{analytics.invoked=!0;analytics.methods=["trackSubmit","trackClick","trackLink","trackForm","pageview","identify","reset","group","track","ready","alias","debug","page","once","off","on"];analytics.factory=function(t){return function(){var e=Array.prototype.slice.call(arguments);e.unshift(t);analytics.push(e);return analytics}};for(var t=0;t<analytics.methods.length;t++){var e=analytics.methods[t];analytics[e]=analytics.factory(e)}analytics.load=function(t){var e=document.createElement("script");e.type="text/javascript";e.async=!0;e.src=("https:"===document.location.protocol?"https://":"http://")+"cdn.segment.com/analytics.js/v1/"+t+"/analytics.min.js";var n=document.getElementsByTagName("script")[0];n.parentNode.insertBefore(e,n)};analytics.SNIPPET_VERSION="4.0.0";
  analytics.load(config.segmentio_api_key);
  analytics.page();
  }}();
};

const fake_segment = {
  identify: (email, actor) => {
    console.log("fakeSegment.identify", email, actor);
  },
  track: (event, data) => {
    console.log("fakeSegment.track", event, data);
  }
}

const segment = (setup_tor_real, config, actor) => {
  embed(config);
  const segmentio = setup_tor_real ? window.analytics : fake_segment;
  const opening_time = Date.now();
    
  segmentio.identify(actor.email, {
    name: actor.name,
    email: actor.email
  });
    
  segmentio.track("Launched Activity", {
    activity: config.activity_name,
    activity_id: config.full_url,
    timestamp: Date.now(),
    name: actor.name,
    email: actor.email,
  });
  
  bus.on('hucklebucked', (slug_or_num) => {
    var tracking_data = {
      activity: config.activity_name,
      activity_id: config.full_url,
      section: slug_or_num,
      timestamp: Date.now(),
      elapsed: Math.round(Date.now() - opening_time / 1000),
      name: actor.name,
      email: actor.email,
    };
    console.log("Segment.track", tracking_data);
    segmentio.track("Navigate Section: " + slug_or_num, tracking_data);
  });
  bus.on('activity::progress::mark_as_completed', (time) => {
    var tracking_data = {
      activity: config.activity_name,
      activity_id: config.full_url,
      timestamp: time,
      name: actor.name,
      email: actor.email,
    };
    console.log("Segment.completed", tracking_data);
    segmentio.track("Completed Activity: " + tracking_data);
  });
}

export default segment;